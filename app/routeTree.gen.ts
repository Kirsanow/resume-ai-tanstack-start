/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ResumesResumeIdIndexImport } from './routes/resumes.$resumeId.index'
import { Route as DashboardResumesIndexImport } from './routes/_dashboard.resumes.index'
import { Route as ResumesResumeIdEditImport } from './routes/resumes.$resumeId.edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResumesResumeIdIndexRoute = ResumesResumeIdIndexImport.update({
  id: '/resumes/$resumeId/',
  path: '/resumes/$resumeId/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardResumesIndexRoute = DashboardResumesIndexImport.update({
  id: '/resumes/',
  path: '/resumes/',
  getParentRoute: () => DashboardRoute,
} as any)

const ResumesResumeIdEditRoute = ResumesResumeIdEditImport.update({
  id: '/resumes/$resumeId/edit',
  path: '/resumes/$resumeId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/resumes/$resumeId/edit': {
      id: '/resumes/$resumeId/edit'
      path: '/resumes/$resumeId/edit'
      fullPath: '/resumes/$resumeId/edit'
      preLoaderRoute: typeof ResumesResumeIdEditImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/resumes/': {
      id: '/_dashboard/resumes/'
      path: '/resumes'
      fullPath: '/resumes'
      preLoaderRoute: typeof DashboardResumesIndexImport
      parentRoute: typeof DashboardImport
    }
    '/resumes/$resumeId/': {
      id: '/resumes/$resumeId/'
      path: '/resumes/$resumeId'
      fullPath: '/resumes/$resumeId'
      preLoaderRoute: typeof ResumesResumeIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardResumesIndexRoute: typeof DashboardResumesIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardResumesIndexRoute: DashboardResumesIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/resumes/$resumeId/edit': typeof ResumesResumeIdEditRoute
  '/resumes': typeof DashboardResumesIndexRoute
  '/resumes/$resumeId': typeof ResumesResumeIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/resumes/$resumeId/edit': typeof ResumesResumeIdEditRoute
  '/resumes': typeof DashboardResumesIndexRoute
  '/resumes/$resumeId': typeof ResumesResumeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/resumes/$resumeId/edit': typeof ResumesResumeIdEditRoute
  '/_dashboard/resumes/': typeof DashboardResumesIndexRoute
  '/resumes/$resumeId/': typeof ResumesResumeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/resumes/$resumeId/edit'
    | '/resumes'
    | '/resumes/$resumeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/resumes/$resumeId/edit'
    | '/resumes'
    | '/resumes/$resumeId'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/login'
    | '/resumes/$resumeId/edit'
    | '/_dashboard/resumes/'
    | '/resumes/$resumeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  ResumesResumeIdEditRoute: typeof ResumesResumeIdEditRoute
  ResumesResumeIdIndexRoute: typeof ResumesResumeIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  ResumesResumeIdEditRoute: ResumesResumeIdEditRoute,
  ResumesResumeIdIndexRoute: ResumesResumeIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard",
        "/login",
        "/resumes/$resumeId/edit",
        "/resumes/$resumeId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/resumes/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/resumes/$resumeId/edit": {
      "filePath": "resumes.$resumeId.edit.tsx"
    },
    "/_dashboard/resumes/": {
      "filePath": "_dashboard.resumes.index.tsx",
      "parent": "/_dashboard"
    },
    "/resumes/$resumeId/": {
      "filePath": "resumes.$resumeId.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
